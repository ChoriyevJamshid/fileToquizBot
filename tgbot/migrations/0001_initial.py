# Generated by Django 5.0.6 on 2024-06-14 22:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chat_id', models.BigIntegerField(unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'telegram_profile',
                'indexes': [models.Index(fields=['chat_id'], name='telegram_pr_chat_id_3db90f_idx')],
                'unique_together': {('chat_id', 'username')},
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('timer', models.IntegerField(blank=True, null=True)),
                ('players', models.ManyToManyField(blank=True, related_name='players_tests', to='tgbot.telegramprofile')),
                ('telegram_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='tgbot.telegramprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.CharField(blank=True, max_length=511, null=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='tgbot.test')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('option', models.CharField(blank=True, max_length=511, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='tgbot.question')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
                'indexes': [models.Index(fields=['created_at'], name='tgbot_optio_created_00582b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='test',
            index=models.Index(fields=['created_at'], name='tgbot_test_created_7b9fa8_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['created_at'], name='tgbot_quest_created_ebeb74_idx'),
        ),
    ]
