# Generated by Django 5.0.6 on 2024-07-09 09:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('timer', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('link', models.CharField(blank=True, max_length=31, null=True)),
            ],
            options={
                'db_table': 'quiz',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('link', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('from_number', models.IntegerField(blank=True, null=True)),
                ('to_number', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='tgbot.quiz')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelegramProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chat_id', models.BigIntegerField(unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('language', models.CharField(blank=True, max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('data', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'telegram_profile',
                'indexes': [models.Index(fields=['chat_id'], name='telegram_pr_chat_id_3db90f_idx')],
                'unique_together': {('chat_id', 'username')},
            },
        ),
        migrations.AddField(
            model_name='quiz',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='tgbot.telegramprofile'),
        ),
        migrations.CreateModel(
            name='UserQuizPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_answers', models.IntegerField(blank=True, default=0, null=True)),
                ('correct_answers', models.IntegerField(blank=True, default=0, null=True)),
                ('skipped_answers', models.IntegerField(blank=True, default=0, null=True)),
                ('failed_answers', models.IntegerField(blank=True, default=0, null=True)),
                ('spend_time', models.IntegerField(blank=True, default=0, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('quiz_part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='tgbot.quizpart')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_parts', to='tgbot.telegramprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='quizpart',
            index=models.Index(fields=['created_at'], name='tgbot_quizp_created_ac4bd0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='quiz',
            unique_together={('user', 'title')},
        ),
        migrations.AddIndex(
            model_name='userquizpart',
            index=models.Index(fields=['created_at'], name='tgbot_userq_created_2bb5df_idx'),
        ),
    ]
